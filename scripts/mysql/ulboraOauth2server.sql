-- MySQL Script generated by MySQL Workbench
-- Sat 23 Jun 2018 07:54:32 PM EDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ulbora_oauth2_server
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ulbora_oauth2_server
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ulbora_oauth2_server` DEFAULT CHARACTER SET utf8 ;
USE `ulbora_oauth2_server` ;

-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`client` (
  `client_id` BIGINT NOT NULL AUTO_INCREMENT,
  `secret` VARCHAR(80) NOT NULL,
  `name` VARCHAR(150) NOT NULL,
  `web_site` VARCHAR(500) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `enabled` TINYINT(1) NOT NULL,
  `paid` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`client_id`),
  UNIQUE INDEX `client_id_UNIQUE` (`client_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`client_scope`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`client_scope` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `scope` VARCHAR(45) NOT NULL,
  `client_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_scope_client1_idx` (`client_id` ASC),
  CONSTRAINT `fk_scope_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ulbora_oauth2_server`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`refresh_token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`refresh_token` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `token` BLOB NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`access_token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`access_token` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `token` BLOB NOT NULL,
  `expires` DATETIME NOT NULL,
  `refresh_token_id` BIGINT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_access_token_refresh_token1_idx` (`refresh_token_id` ASC),
  CONSTRAINT `fk_access_token_refresh_token1`
    FOREIGN KEY (`refresh_token_id`)
    REFERENCES `ulbora_oauth2_server`.`refresh_token` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`authorization_code`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`authorization_code` (
  `authorization_code` BIGINT NOT NULL AUTO_INCREMENT,
  `client_id` BIGINT NOT NULL,
  `user_id` VARCHAR(100) NOT NULL,
  `expires` DATETIME NOT NULL,
  `access_token_id` BIGINT NOT NULL,
  `randon_auth_code` VARCHAR(150) NOT NULL,
  `already_used` TINYINT(1) NOT NULL,
  PRIMARY KEY (`authorization_code`),
  UNIQUE INDEX `authorization_code_UNIQUE` (`authorization_code` ASC),
  INDEX `fk_authorization_code_client1_idx` (`client_id` ASC),
  INDEX `fk_authorization_code_access_token1_idx` (`access_token_id` ASC),
  CONSTRAINT `fk_authorization_code_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ulbora_oauth2_server`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_authorization_code_access_token1`
    FOREIGN KEY (`access_token_id`)
    REFERENCES `ulbora_oauth2_server`.`access_token` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`auth_code_scope`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`auth_code_scope` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `scope` VARCHAR(45) NOT NULL,
  `authorization_code` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_auth_code_scope_authorization_code1_idx` (`authorization_code` ASC),
  CONSTRAINT `fk_auth_code_scope_authorization_code1`
    FOREIGN KEY (`authorization_code`)
    REFERENCES `ulbora_oauth2_server`.`authorization_code` (`authorization_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`implicit_grant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`implicit_grant` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `client_id` BIGINT NOT NULL,
  `user_id` VARCHAR(100) NOT NULL,
  `access_token_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_implicit_grant_client1_idx` (`client_id` ASC),
  INDEX `fk_implicit_grant_access_token1_idx` (`access_token_id` ASC),
  CONSTRAINT `fk_implicit_grant_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ulbora_oauth2_server`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_implicit_grant_access_token1`
    FOREIGN KEY (`access_token_id`)
    REFERENCES `ulbora_oauth2_server`.`access_token` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`implicit_scope`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`implicit_scope` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `scope` VARCHAR(45) NOT NULL,
  `implicit_grant_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_implicit_scope_implicit_grant1_idx` (`implicit_grant_id` ASC),
  CONSTRAINT `fk_implicit_scope_implicit_grant1`
    FOREIGN KEY (`implicit_grant_id`)
    REFERENCES `ulbora_oauth2_server`.`implicit_grant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`password_grant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`password_grant` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `user_id` VARCHAR(100) NOT NULL,
  `client_id` BIGINT NOT NULL,
  `access_token_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_password_grant_client1_idx` (`client_id` ASC),
  INDEX `fk_password_grant_access_token1_idx` (`access_token_id` ASC),
  CONSTRAINT `fk_password_grant_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ulbora_oauth2_server`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_password_grant_access_token1`
    FOREIGN KEY (`access_token_id`)
    REFERENCES `ulbora_oauth2_server`.`access_token` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`credentials_grant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`credentials_grant` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `client_id` BIGINT NOT NULL,
  `access_token_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_credentials_grant_client1_idx` (`client_id` ASC),
  INDEX `fk_credentials_grant_access_token1_idx` (`access_token_id` ASC),
  CONSTRAINT `fk_credentials_grant_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ulbora_oauth2_server`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_credentials_grant_access_token1`
    FOREIGN KEY (`access_token_id`)
    REFERENCES `ulbora_oauth2_server`.`access_token` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`client_allowed_uri`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`client_allowed_uri` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `uri` VARCHAR(2000) NOT NULL,
  `client_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_client_allowed_uri_client1_idx` (`client_id` ASC),
  CONSTRAINT `fk_client_allowed_uri_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ulbora_oauth2_server`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`client_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`client_role` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(45) NOT NULL,
  `client_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_client_roles_client1_idx` (`client_id` ASC),
  CONSTRAINT `fk_client_roles_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ulbora_oauth2_server`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`uri_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`uri_role` (
  `client_role_id` BIGINT NOT NULL,
  `client_allowed_uri_id` BIGINT NOT NULL,
  INDEX `fk_uri_role_client_role1_idx` (`client_role_id` ASC),
  INDEX `fk_uri_role_client_allowed_uri1_idx` (`client_allowed_uri_id` ASC),
  PRIMARY KEY (`client_role_id`, `client_allowed_uri_id`),
  CONSTRAINT `fk_uri_role_client_role1`
    FOREIGN KEY (`client_role_id`)
    REFERENCES `ulbora_oauth2_server`.`client_role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_uri_role_client_allowed_uri1`
    FOREIGN KEY (`client_allowed_uri_id`)
    REFERENCES `ulbora_oauth2_server`.`client_allowed_uri` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`client_grant_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`client_grant_type` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `grant_type` VARCHAR(45) NOT NULL,
  `client_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_client_grant_type_client1_idx` (`client_id` ASC),
  CONSTRAINT `fk_client_grant_type_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ulbora_oauth2_server`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`client_redirect_uri`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`client_redirect_uri` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `uri` VARCHAR(80) NOT NULL,
  `client_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_client_redirect_uri_client1_idx` (`client_id` ASC),
  CONSTRAINT `fk_client_redirect_uri_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ulbora_oauth2_server`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = big5;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`refresh_token_key`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`refresh_token_key` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `key` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`access_token_key`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`access_token_key` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `key` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`session_key`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`session_key` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `key` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ulbora_oauth2_server`.`auth_code_revoke`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ulbora_oauth2_server`.`auth_code_revoke` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `authorization_code` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_auth_code_revolk_authorization_code1_idx` (`authorization_code` ASC),
  CONSTRAINT `fk_auth_code_revolk_authorization_code1`
    FOREIGN KEY (`authorization_code`)
    REFERENCES `ulbora_oauth2_server`.`authorization_code` (`authorization_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
